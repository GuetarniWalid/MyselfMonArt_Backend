name: Deploy to DigitalOcean with Docker

on:
  push:
    branches:
      - main
      - test

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install app dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Copy docker-compose.yml to build directory
        run: cp Docker/docker-compose.yml build/docker-compose.yml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images for app
        run: |
          docker build -f Docker/node/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
        working-directory: .

      - name: Build and push Docker images for nginx
        run: |
          docker build -f Docker/nginx/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Transfer docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          source: "./Docker/docker-compose.yml"
          target: "/opt/MyselfMonArt_Dashboard"

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            mv /opt/MyselfMonArt_Dashboard/Docker/docker-compose.yml /opt/MyselfMonArt_Dashboard/docker-compose.yml
            rm -r /opt/MyselfMonArt_Dashboard/Docker
            apt-get update
            apt-get install docker-compose -y
            cd /opt/MyselfMonArt_Dashboard
            export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            export DIGITALOCEAN_HOST="${{ secrets.DIGITALOCEAN_HOST }}"
            docker-compose down || true
            docker-compose pull
            docker-compose up -d
            docker-compose logs
            sleep 10
            # Initial certificate setup if needed
            docker-compose exec -T certbot certbot certonly --webroot \
              --webroot-path=/var/www/certbot \
              --agree-tos \
              --no-eff-email \
              --non-interactive \
              -d backend.myselfmonart.com || true
            # Verify certificate exists
            docker-compose exec -T certbot certbot certificates | grep "Certificate Name: backend.myselfmonart.com" || {
              echo "Certificate setup failed"
              docker-compose logs certbot
              exit 1
            }
            if ! docker-compose exec -T app node ace migration:run; then
              echo "Migration failed"
              docker-compose logs app
              exit 1
            fi
            if ! docker-compose exec -T app node ace db:seed; then
              echo "Seeding failed"
              docker-compose logs app
              exit 1
            fi
            docker system prune -a --volumes -f || true
            set +e
            docker-compose exec -T certbot certbot renew --webroot \
              --webroot-path=/var/www/certbot \
              --agree-tos \
              --no-eff-email \
              -d backend.myselfmonart.com || \
            docker-compose exec -T certbot certbot certonly --webroot \
              --webroot-path=/var/www/certbot \
              --agree-tos \
              --no-eff-email \
              -d backend.myselfmonart.com
            docker-compose ps
            docker-compose logs --tail=100
            # Debug certbot specifically
            echo "Checking certbot status:"
            docker-compose ps certbot
            echo "Certbot logs:"
            docker-compose logs certbot
